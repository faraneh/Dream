{"ast":null,"code":"var _jsxFileName = \"/Users/farane/Documents/Codes/dream-GITHUB/src/components/contactMe/contactMeInput/contactMeInput.jsx\";\nimport React from 'react';\nimport './contactMeInput.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst contactMeInput = props => {\n  let inputElement = null;\n  const contactMeInputClasses = ['InputElement'];\n  const contactMeInputClassesTxtArea = [...contactMeInputClasses, 'contactMeTextarea'];\n\n  if (props.invalid && props.touched) {\n    contactMeInputClasses.push('Invalid');\n  }\n\n  switch (props.elementType) {\n    case 'input':\n      inputElement = /*#__PURE__*/_jsxDEV(\"input\", { ...props.elementConfig,\n        className: contactMeInputClasses.join(' '),\n        value: props.value,\n        onChange: props.contactMeChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 28\n      }, this);\n      break;\n\n    case 'textarea':\n      inputElement = /*#__PURE__*/_jsxDEV(\"textarea\", { ...props.elementConfig,\n        className: contactMeInputClassesTxtArea.join(' '),\n        cols: 2,\n        value: props.value,\n        onChange: props.contactMeChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 28\n      }, this);\n      break;\n\n    default:\n      inputElement = /*#__PURE__*/_jsxDEV(\"input\", { ...props.elementConfig,\n        className: contactMeInputClasses,\n        value: props.value,\n        onChange: props.contactMeChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 28\n      }, this);\n      break;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'contactMeInput',\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: 'Label',\n      name: props.name,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), inputElement]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\nexport default contactMeInput;","map":{"version":3,"sources":["/Users/farane/Documents/Codes/dream-GITHUB/src/components/contactMe/contactMeInput/contactMeInput.jsx"],"names":["React","contactMeInput","props","inputElement","contactMeInputClasses","contactMeInputClassesTxtArea","invalid","touched","push","elementType","elementConfig","join","value","contactMeChanged","name","label"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAE9B,MAAIC,YAAY,GAAG,IAAnB;AACA,QAAMC,qBAAqB,GAAG,CAAC,cAAD,CAA9B;AACA,QAAMC,4BAA4B,GAAG,CAAC,GAAGD,qBAAJ,EAA2B,mBAA3B,CAArC;;AAEA,MAAGF,KAAK,CAACI,OAAN,IAAiBJ,KAAK,CAACK,OAA1B,EAAmC;AAC/BH,IAAAA,qBAAqB,CAACI,IAAtB,CAA2B,SAA3B;AACH;;AAED,UAAQN,KAAK,CAACO,WAAd;AACI,SAAM,OAAN;AACIN,MAAAA,YAAY,gBAAG,sBACPD,KAAK,CAACQ,aADC;AAEX,QAAA,SAAS,EAAEN,qBAAqB,CAACO,IAAtB,CAA2B,GAA3B,CAFA;AAGX,QAAA,KAAK,EAAET,KAAK,CAACU,KAHF;AAIX,QAAA,QAAQ,EAAEV,KAAK,CAACW;AAJL;AAAA;AAAA;AAAA;AAAA,cAAf;AAKA;;AACJ,SAAM,UAAN;AACIV,MAAAA,YAAY,gBAAG,yBACPD,KAAK,CAACQ,aADC;AAEX,QAAA,SAAS,EAAEL,4BAA4B,CAACM,IAA7B,CAAkC,GAAlC,CAFA;AAGX,QAAA,IAAI,EAAE,CAHK;AAIX,QAAA,KAAK,EAAET,KAAK,CAACU,KAJF;AAKX,QAAA,QAAQ,EAAEV,KAAK,CAACW;AALL;AAAA;AAAA;AAAA;AAAA,cAAf;AAMA;;AACJ;AACIV,MAAAA,YAAY,gBAAG,sBACPD,KAAK,CAACQ,aADC;AAEX,QAAA,SAAS,EAAEN,qBAFA;AAGX,QAAA,KAAK,EAAEF,KAAK,CAACU,KAHF;AAIX,QAAA,QAAQ,EAAEV,KAAK,CAACW;AAJL;AAAA;AAAA;AAAA;AAAA,cAAf;AAKA;AAtBR;;AAwBA,sBACI;AAAK,IAAA,SAAS,EAAE,gBAAhB;AAAA,4BACI;AAAO,MAAA,SAAS,EAAE,OAAlB;AAA2B,MAAA,IAAI,EAAEX,KAAK,CAACY,IAAvC;AAAA,gBAA8CZ,KAAK,CAACa;AAApD;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKZ,YAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAxCD;;AA0CA,eAAeF,cAAf","sourcesContent":["import React from 'react';\nimport './contactMeInput.css';\n\nconst contactMeInput = (props) => {\n\n    let inputElement = null;\n    const contactMeInputClasses = ['InputElement'];\n    const contactMeInputClassesTxtArea = [...contactMeInputClasses, 'contactMeTextarea'];\n\n    if(props.invalid && props.touched) { \n        contactMeInputClasses.push('Invalid');\n    }\n\n    switch (props.elementType) { \n        case ('input'):\n            inputElement = <input \n                {...props.elementConfig} \n                className={contactMeInputClasses.join(' ')} \n                value={props.value}\n                onChange={props.contactMeChanged} />;\n            break;\n        case ('textarea'):\n            inputElement = <textarea \n                {...props.elementConfig} \n                className={contactMeInputClassesTxtArea.join(' ')} \n                cols={2} \n                value={props.value}\n                onChange={props.contactMeChanged} />;\n            break;\n        default: \n            inputElement = <input \n                {...props.elementConfig} \n                className={contactMeInputClasses} \n                value={props.value}\n                onChange={props.contactMeChanged} />;\n            break;\n    }\n    return ( \n        <div className={'contactMeInput'}>\n            <label className={'Label'} name={props.name}>{props.label}</label>\n            {inputElement}\n        </div>\n     );\n}\n \nexport default contactMeInput;"]},"metadata":{},"sourceType":"module"}